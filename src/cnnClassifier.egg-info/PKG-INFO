Metadata-Version: 2.1
Name: cnnClassifier
Version: 0.0.0
Summary: A python package for CNN app
Home-page: https://github.com/Immortal-Pi/TumorFlow
Author: Immortal-Pi
Author-email: 26.amruth@gmail.com
Project-URL: Bug Tracker, https://github.com/Immortal-Pi/TumorFlow/issues
Description-Content-Type: text/markdown


# Kidney-Disease-Classification-MLflow-DVC

May the data be with you 

# How to run?

### STEPS:
Clone the repository
```bash
https://github.com/Immortal-Pi/TumorFlow
```

### STEP 01- Create a conda environment after opening the repository
```bash 
conda create -n mlopscnn python=3.9 -y
```
```bash 
conda activate mlopscnn
```

### STEP 02- install the requirements
```bash
pip install -r requirements.txt
```

# Finally run the following command
```bash
python app.py
```

Now,

open up you local host and port

# MLFLOW 

dagshub 

```bash
import dagshub
dagshub.init(repo_owner='Immortal-Pi', repo_name='TumorFlow', mlflow=True)
```

### DVC cmd 

1. dvc init 
2. dvc repro
3. dvc dag 


### AWS -CICD-Deployment-with-Github-Actions

1. Login to AWS console 
2. Create IAM use for deployment 
```bash
#with specific access
1. ECR access
2. ECR Elastic Container 

# Description: About the deployment 
1. Build docker image of the source code 
2. Push the docker imange to ECR
3. Launch your EC2 
4. Pull your image from ECR in EC2 
5. Launch your docker image in EC2 

# Policy 
1. AmazonEC2ContainerRegistryFullAccess
2. AmazonEC2FullAccess
```

## 3. Create ECR repo to store/save docker image 
    - save the URI: 011528265658.dkr.ecr.us-east-2.amazonaws.com/kidney

## 4. Create EC2 machine (Ubuntu)

## 5. Open EC2 and install docker in EC2 Machine 
```bash
#optinal
sudo apt-get update -y
sudo apt-get upgrade
#required
curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh
sudo usermod -aG docker ubuntu
newgrp docker
```

## 6. Configure EC2 as self-hosted runner:
```bash
setting>actions>runner>new self hosted runner> choose os> then run command one by one
```

## 7. Setup github secrets:
```bash 
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION = us-east-1
AWS_ECR_LOGIN_URI = example>>  566373416292.dkr.ecr.ap-south-1.amazonaws.com
ECR_REPOSITORY_NAME = simple-app
```
